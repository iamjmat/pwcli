#!/usr/bin/env python
#
# Copyright (c) 2016, The Linux Foundation.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import argparse
import sys
import os
import os.path


BUILDER_WARNINGS_COUNT = 'STUB_BUILDER_WARNINGS_COUNT'
BUILDER_RETURN_VALUE = 'STUB_BUILDER_RETURN_VALUE'

def main():
      # for the help and possible future additions
      parser = argparse.ArgumentParser(description='builder stub mimicking a compiler')
      args = parser.parse_args()
      assert args # to shut up pyflakes

      filenames = ['foo.c', 'bar.c', 'aaa.c', 'bbb.c']
      for filename in filenames:
            sys.stdout.write('  CC %s\n' % (filename))
            sys.stdout.flush()

      if BUILDER_WARNINGS_COUNT in os.environ:
            count = int(os.environ[BUILDER_WARNINGS_COUNT])
            for i in range(min(count, len(filenames))):
                  sys.stderr.write('%s: warning: is suspicious\n' % (filenames[i]))
                  sys.stdout.flush()

      if BUILDER_RETURN_VALUE in os.environ:
            sys.exit(int(os.environ[BUILDER_RETURN_VALUE]))

      sys.exit(0)

if __name__ == "__main__":
      main()
