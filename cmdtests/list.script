#!/usr/bin/env python

import pexpect
import sys
import os
import shutil

PROMPT = 'test-branch@data >'
def main():
   srcdir = os.environ['SRCDIR']
   datadir = os.environ['DATADIR']
   patchesdir = os.path.join(datadir, 'patches')
   gitdir = os.path.join(datadir, 'git')
   smtpddir = os.path.join(datadir, 'smtpd')
   srcpatchesdir = os.path.join(srcdir, '..', 'stubs', 'data', 'patches')
   srcgitdir = os.path.join(srcdir, '..', 'stubs', 'data', 'git')

   # create copy of patches
   shutil.copytree(srcpatchesdir, patchesdir)
   os.environ['STUB_PATCHWORK_DATADIR'] = patchesdir

   # create fake git repo
   shutil.copytree(srcgitdir, gitdir)
   os.environ['STUB_GIT_DATADIR'] = gitdir

   # setup directory for smtpd
   os.mkdir(smtpddir)
   os.environ['STUB_SMTPD_DATADIR'] = smtpddir
   
   os.chdir('..')
   child = pexpect.spawn('./run_stub')
   child.logfile = sys.stdout
   child.expect(PROMPT)
   child.sendline('list')
   child.expect(PROMPT)
   child.sendline('commit 1')
   child.expect('commit All/commit Individually/aBort\?')
   child.sendline('a')
   child.expect('Update state in patchwork\? \[y/N\]')
   child.sendline('y')
   child.expect('Send/Edit/Abort\?')
   child.sendline('s')

   child.expect(PROMPT)
   child.sendline('quit')

   # check what mails smtpd received
   print 'mails: %s' % os.listdir(smtpddir)

   # cat smtpddir/0
   mail0 = os.path.join(smtpddir, '0')
   f = open(mail0, 'r')
   print 'smtpddir/0:'
   print f.read()
   f.close()

   # cleanup
   shutil.rmtree(patchesdir)
   shutil.rmtree(smtpddir)

if __name__ == "__main__":
   main()
