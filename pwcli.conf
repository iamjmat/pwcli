#
# Example configuration file for pwcli.
#
# Copy this to .git/pwcli/config and edit to match your settings
#

[general]

# patchwork server's URL
server-url = https://patchwork.example.com/

# Patchwork username.
username = edward

# Patchwork token which can be retrieved from your patchwork profile
# page, e.g. https://patchwork.example.com/user.
token = abcd123456789890

# Name of patchwork project(s) to use, multiple projects are separated
# with a space.
project = linux-wireless

# Command to open patch URL's from patchwork. (Optional)
#browser = xdg-open

# The command used to build the software after a patch is applied. (Optional)
#build-command = make -j 8

# (Optional) Send automatic emails ("thank you" or the reason comment
# when rejecting) after commiting or reviewing a patch to all address
# in TO and Cc fields. The reply command will send an email even if
# this setting is disabled.
#
# Valid options: false (default), true
#
#automatic-emails = true

# (Optional) When commiting a patch add a tag to the end of commit log
# with email's Message-id. This is to link the patch to the actual
# email containing the patch. Example:
#
#   Link: https://lore.kernel.org/r/1587495512-29813-1-git-send-email-mkenna@codeaurora.org
#
# Valid options: string with %s marking the location of actual msgid
#
#msgid-tag = Link: https://lore.kernel.org/r/%s

# With the review command apply the patch to a pending branch. Valid
# options: disabled (default), stgit. (Optional)
#pending-mode = stgit

# The name of the pending branch in git. (Optional)
#pending-branch = pending

# The name of the git branch(es) where the patch is commited when
# commit command is issued. Multiple branches are separated with a
# command and chosen with the branch command in pwcli shell.
# (Optional)
#main-branches = ath-next ath-current

# Log level to use with the .git/pwcli/log file. Valid options: info,
# debug (default). (Optional)
#log-level = debug
